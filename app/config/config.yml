imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en
    article_directory: '%kernel.root_dir%/../web/bundles/framework/images/article'
    avatar_directory: '%kernel.root_dir%/../web/bundles/framework/images/user'
    company_directory: '%kernel.root_dir%/../web/bundles/framework/images/company'
    photo_directory: '%kernel.root_dir%/../web/bundles/framework/images/photo'
    post_directory: '%kernel.root_dir%/../web/bundles/framework/images/post'
    post_video_directory: '%kernel.root_dir%/../web/bundles/framework/videos/post'
framework:
    #esi:             ~
    translator:      { fallbacks: [en] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # http://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id:  session.handler.native_file
        save_path:   "%kernel.root_dir%/../var/sessions/%kernel.environment%"
    fragments:       ~
    http_method_override: true
    assets: ~

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    globals:
        root_path: %kernel.root_dir%/../web

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        mapping_types:
                  enum: string
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }
fos_user:
    db_driver: orm 
    firewall_name: main
    user_class: AppBundle\Entity\User
    group:
        group_class: AppBundle\Entity\FOSGroup
    registration:
        form:
            type: AppBundle\Form\RegistrationType
            #validation_groups: [AppRegistration]
        confirmation:
            enabled: true
    from_email:
        address: "noreply@yourcompany.com"
        sender_name: "No Reply"
        
sonata_block:
    default_contexts: [cms]
    blocks:
        # enable the SonataAdminBundle block
        sonata.admin.block.admin_list:
            contexts: [admin]
hwi_oauth:
    firewall_names: [main]
    connect:
            account_connector: my_user_provider
    fosub:
            username_iterations: 30
            properties:
                # these properties will be used/redefined later in the custom FOSUBUserProvider service.
                facebook: facebook_id
                google: google_id
    # an optional setting to configure a query string parameter which can be used to redirect
    # the user after authentication, e.g. /connect/facebook?_destination=/my/destination will
    # redirect the user to /my/destination after facebook authenticates them.  If this is not
    # set then the user will be redirected to the original resource that they requested, or
    # the base address if no resource was requested.  This is similar to the behaviour of
    # [target_path_parameter for form login](http://symfony.com/doc/2.0/cookbook/security/form_login.html).
    # target_path_parameter: _destination

    # an optional setting to use the HTTP REFERER header to be used in case no
    # previous URL was stored in the session (i.e. no resource was requested).
    # This is similar to the behaviour of
    # [using the referring URL for form login](http://symfony.com/doc/2.0/cookbook/security/form_login.html#using-the-referring-url).
    # use_referer: true

    # here you will add one (or more) configurations for resource owners
    # and other settings you want to adjust in this bundle, just checkout the list below!
    resource_owners:
            facebook:
                type:                facebook
                client_id:           751845425156610
                client_secret:       f85a6cc67e6524b319b09059f7254cf5
                scope:               "email"
                options:
                    csrf: true
            google:
                type:                google
                client_id:           275255616990-opksacojb5qis0h13l283ui4k4b4k99b.apps.googleusercontent.com
                client_secret:       73i5kCHJUSDjKL2crcdDlu1Y
                scope:               "https://www.googleapis.com/auth/userinfo.email"
                options:
                    csrf: true
            twitter:
                type:                twitter
                client_id:           9IPh0A0gu3o4RUmrri8jsKww2
                client_secret:       DjTeImL1342EQ0K1RL7r4lpWri2XADmtsZ2Ty9dztbTYRljr5Q
                scope:               "email"
                infos_url:           "https://api.twitter.com/1.1/account/verify_credentials.json?include_email=true"
                paths:
                    email: email
                options:
                    csrf: true
            vkontakte:
                type:                vkontakte
                client_id:           6634478
                client_secret:       MA5JFa2mwp2PB21goPHI
                scope:               "email"
                options:
                    csrf: true
                paths:
                    profilepicture: response.0.photo_medium
            odnoklassniki:
                type:                odnoklassniki
                client_id:           1249272064
                client_secret:       3C6AEBFF8162F531E1EB8AFA
                options:
                    application_key: CBACGHHLEBABABABA
            instagram:
                type:                instagram
                client_id:           dfea5dd9c58e430591415bd67f70ff84
                client_secret:       e4ee4c3a2d3e4ea987c9bb89f890b52d
                auth_with_one_url:   false
            flickr:
                type:                flickr
                client_id:           24b5fc7ff2f96bb311fbe0c3fd374ead
                client_secret:       a4e2d96a78431b81
            foursquare:
                type:                foursquare
                client_id:           0ZYR5EY4JME0TBTFXPHF3NTGAVE1RA4DSFYYADLUNYGG2E5U
                client_secret:       ISSELCDDDTMQTA25N32N44NL5XJPYNK5NON3DY41HNZDEZDZ
                paths:
                     profilepicture: response.profilepicture
            wordpress:
                type:                wordpress
                client_id:           <client_id>
                client_secret:       <client_secret>
            yahoo:
                type:                yahoo
                client_id:           dj0yJmk9WG0wVXN6NFU1MHE4JmQ9WVdrOVpEZ3laalJDTTJNbWNHbzlNQS0tJnM9Y29uc3VtZXJzZWNyZXQmeD03YQ--
                client_secret:       20a48d5c29bd4914cb6eb2810787e9e420044367
                paths:
                     profilepicture: profile.image.imageUrl
            tumblr:
                type:                oauth1
                client_id:           PxWoCXpbRvkE3Pim5yw7bqxw6GAmCEYaIavKZ7zNV49c0SNJ6D
                client_secret:       5LhTlqx3eMnGYYPUg6Gt5r2WjVM4Uo2cAjclTNK6vZWzObti7Z
                access_token_url:    https://www.tumblr.com/oauth/access_token
                authorization_url:   https://www.tumblr.com/oauth/authorize
                request_token_url:   https://www.tumblr.com/oauth/request_token
                infos_url:           https://api.tumblr.com/v2/user/info
                scope:               "read"
                user_response_class: HWI\Bundle\OAuthBundle\OAuth\Response\PathUserResponse
                paths:
                    identifier:     response.user.name
                    nickname:       response.user.name
                    realname:       response.user.name
            imgur:
                type:                oauth2
                client_id:           723a85a21e8fb8c
                client_secret:       c9c529995ac7326fba19a511d2b72413c4e45422
                access_token_url:    https://api.imgur.com/oauth2/token
                authorization_url:   https://api.imgur.com/oauth2/authorize
                infos_url:           https://api.imgur.com/3/account/me
                user_response_class: HWI\Bundle\OAuthBundle\OAuth\Response\PathUserResponse
                auth_with_one_url:   false
                default_target_path: /
                paths:
                    identifier: data.id
                    username:   data.url
                    nickname:   data.url
                    realname:   data.url
            imgur2:
                type:                oauth2
                client_id:           1298c9e0671088c
                client_secret:       79ad3af4d476682e219076e0e4d0d81b41af18c9
                access_token_url:    https://api.imgur.com/oauth2/token
                authorization_url:   https://api.imgur.com/oauth2/authorize
                infos_url:           https://api.imgur.com/3/account/me
                user_response_class: HWI\Bundle\OAuthBundle\OAuth\Response\PathUserResponse
                auth_with_one_url:   false
                default_target_path: /
                paths:
                    identifier: data.id
                    username:   data.url
                    nickname:   data.url
                    realname:   data.url
            pinterest:
                type:                oauth2
                client_id:           4999037562199762402
                client_secret:       6946ebc66c0a0ac1e0031b62c0d1420013359291f7f25396b3b05fecf22efd4f
                access_token_url:    https://api.pinterest.com/v1/oauth/token
                authorization_url:   https://api.pinterest.com/oauth/
                infos_url:           https://api.pinterest.com/v1/me/
                scope:               "read_public"
                user_response_class: HWI\Bundle\OAuthBundle\OAuth\Response\PathUserResponse
                paths:
                    identifier: data.id
                    nickname:   data.first_name
                    realname:   data.last_name

